---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { Image } from 'astro:assets';
import { getAllBlogPosts, getAllTags } from '../data/blog';

const blogPosts = await getAllBlogPosts();
const allTags = await getAllTags();
---

<Layout title="Blog - David Martin | DJM Tech" description="Thoughts on web development, technology, and building better software. Explore my latest articles and insights.">
  <Header />
  
  <!-- Hero Section -->
  <section class="relative hero-bg py-20 lg:py-32 overflow-hidden">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h1 class="text-4xl md:text-5xl font-bold hero-title mb-6">Blog</h1>
        <p class="text-xl hero-subtitle max-w-3xl mx-auto">
          Thoughts on web development, technology, and building better software. 
          Exploring new ideas and sharing lessons learned along the way.
        </p>
      </div>
    </div>
    
    <!-- Background Elements -->
    <div class="absolute inset-0 hero-bg-elements">
      <div class="hero-bg-gradient"></div>
      <div class="hero-bg-pattern"></div>
    </div>
  </section>

  <!-- Tag Filter -->
  <section class="py-8 section-bg border-b border-color">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex flex-wrap justify-center gap-3">
        <button class="tag-filter active px-4 py-2 rounded-full font-medium transition-colors" data-tag="all">
          All Posts ({blogPosts.length})
        </button>
        {allTags.map((tag) => (
          <button class="tag-filter px-4 py-2 rounded-full font-medium transition-colors" data-tag={tag}>
            {tag}
          </button>
        ))}
      </div>
    </div>
  </section>

  <!-- All Posts -->
  <section class="py-20 section-bg">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-2xl font-bold section-title mb-8">All Posts</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="posts-grid">
        {blogPosts.map((post) => (
          <article class={`blog-post neon-card overflow-hidden hover:shadow-neon-glow transition-all duration-300 ${post.tags.join(' ')} flex flex-col`}>
            <div class="h-64 blog-image-bg flex items-center justify-center overflow-hidden">
              <Image 
                src={post.image || "/assets/og-default.png"} 
                alt={post.title}
                width={400}
                height={300}
                class="w-full h-full object-cover"
                loading="lazy"
              />
            </div>
            <div class="p-6 flex flex-col flex-grow">
              <div class="flex items-center text-sm blog-meta mb-3">
                <span>{new Date(post.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
                <span class="mx-2">•</span>
                <span>{post.readTime} min read</span>
                {post.featured && (
                  <>
                    <span class="mx-2">•</span>
                    <span class="text-yellow-500 font-medium">Featured</span>
                  </>
                )}
              </div>
              <h3 class="text-xl font-semibold blog-post-title mb-3">{post.title}</h3>
              <p class="blog-post-description mb-4">{post.description}</p>
              <div class="flex flex-wrap gap-2 mb-4">
                {post.tags.map((tag) => (
                  <span class="px-2 py-1 blog-tag text-xs rounded">{tag}</span>
                ))}
              </div>
              <a href={`/blog/${post.slug}`} class="blog-link mt-auto">
                Read More →
              </a>
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>
  <Footer />

  <script>
    // Tag filtering functionality
    document.addEventListener('DOMContentLoaded', function() {
      const tagFilters = document.querySelectorAll('.tag-filter');
      const blogPosts = document.querySelectorAll('.blog-post');
      
      tagFilters.forEach(filter => {
        filter.addEventListener('click', function(this: HTMLElement) {
          const tag = this.getAttribute('data-tag');
          
          // Update active filter
          tagFilters.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          
          // Filter posts
          blogPosts.forEach(post => {
            if (tag === 'all' || (tag && post.classList.contains(tag!))) {
              (post as HTMLElement).style.display = 'block';
              (post as HTMLElement).style.animation = 'fadeIn 0.3s ease-in';
            } else {
              (post as HTMLElement).style.display = 'none';
            }
          });
        });
      });
    });
  </script>

  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .hero-bg {
      background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
      position: relative;
    }

    html.light .hero-bg {
      background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .hero-bg-elements {
      pointer-events: none;
    }

    .hero-bg-gradient {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 30% 20%, rgba(0, 212, 255, 0.05) 0%, transparent 50%),
                  radial-gradient(circle at 70% 80%, rgba(0, 212, 255, 0.03) 0%, transparent 50%);
    }

    .hero-bg-pattern {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: 
        radial-gradient(circle at 1px 1px, rgba(0, 212, 255, 0.08) 1px, transparent 0);
      background-size: 20px 20px;
      opacity: 0.2;
    }

    .hero-title {
      color: var(--text-primary);
    }

    html.light .hero-title {
      color: #0f172a;
      font-weight: 700;
    }

    .hero-subtitle {
      color: var(--text-secondary);
    }

    html.light .hero-subtitle {
      color: #475569;
      font-weight: 500;
    }

    .section-bg {
      background-color: var(--bg-secondary);
    }

    .section-title {
      color: var(--text-primary);
    }

    .blog-bg {
      background-color: var(--bg-secondary);
    }

    .blog-title {
      color: var(--text-primary);
    }

    .blog-image-bg {
      background: linear-gradient(135deg, var(--bg-card) 0%, var(--bg-secondary) 100%);
    }

    .blog-icon {
      color: var(--accent-color);
    }

    .blog-meta {
      color: var(--text-secondary);
    }

    .blog-post-title {
      color: var(--text-primary);
    }

    .blog-post-description {
      color: var(--text-secondary);
    }

    .blog-tag {
      background-color: rgba(0, 212, 255, 0.2);
      color: var(--accent-color);
      border: 1px solid var(--accent-color);
    }

    .blog-link {
      color: var(--accent-color);
      font-weight: 500;
      transition: color 0.3s;
      cursor: pointer;
      pointer-events: auto;
      position: relative;
      z-index: 10;
      text-decoration: none;
    }

    .blog-link:hover {
      color: var(--accent-hover);
    }

    .cta-bg {
      background: linear-gradient(135deg, var(--accent-color) 0%, var(--accent-dark) 100%);
    }

    .cta-title {
      color: var(--bg-primary);
    }

    .cta-subtitle {
      color: rgba(255, 255, 255, 0.9);
    }

    .tag-filter {
      background-color: var(--bg-secondary);
      color: var(--text-secondary);
      border: 1px solid var(--border-color);
    }

    .tag-filter:hover {
      background-color: var(--bg-card);
      color: var(--text-primary);
    }

    .tag-filter.active {
      background-color: var(--accent-color);
      color: var(--bg-primary);
      border-color: var(--accent-color);
    }
  </style>
</Layout>
